services:
  db:
    image: postgres:17
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-mailbuddybot}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/database/docker-init:/docker-entrypoint-initdb.d
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-mailbuddybot}
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - app-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - DISCORD_TOKEN=${DISCORD_TOKEN}
      - CLIENT_ID=${CLIENT_ID}
      - GUILD_ID=${GUILD_ID}
      - DATABASE_URL=postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-mailbuddybot}
    volumes:
      - ./src:/app/src
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "bun", "run", "src/db/healthcheck.ts"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
